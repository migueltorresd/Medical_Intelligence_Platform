version: '3.8'

services:
  # PostgreSQL Database for Medical Intelligence Platform
  postgres:
    image: postgres:15-alpine
    container_name: medical_platform_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: medical_intelligence_platform
      POSTGRES_USER: medical_admin
      POSTGRES_PASSWORD: secure_medical_2024!
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medical_admin -d medical_intelligence_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - medical_network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: medical_platform_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@medical-platform.com
      PGADMIN_DEFAULT_PASSWORD: admin_secure_2024!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - medical_network

  # Redis for caching and sessions (opcional para el futuro)
  redis:
    image: redis:7-alpine
    container_name: medical_platform_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_secure_2024!
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - medical_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  medical_network:
    driver: bridge
    name: medical_platform_network
